{"ast":null,"code":"const todo = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false\n      };\n\n    case 'TOGGLE_TODO':\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        completed: !state.completed\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, todo(undefined, action)];\n\n    case 'TOGGLE_TODO':\n      return state.map(t => todo(t, action));\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/maximilianobelizan/projects/git_pr/testing-react-libraries/redux/src/reducers/todos.js"],"names":["todo","state","action","type","id","text","completed","Object","assign","todos","undefined","map","t"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO;AACLC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADN;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK,aAAL;AACE,UAAIL,KAAK,CAACG,EAAN,KAAaF,MAAM,CAACE,EAAxB,EAA4B;AAC1B,eAAOH,KAAP;AACD;;AAED,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC9BK,QAAAA,SAAS,EAAE,CAACL,KAAK,CAACK;AADY,OAAzB,CAAP;;AAIF;AACE,aAAOL,KAAP;AAjBJ;AAmBD,CApBH;;AAsBE,MAAMQ,KAAK,GAAG,CAACR,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGF,KADE,EAELD,IAAI,CAACU,SAAD,EAAYR,MAAZ,CAFC,CAAP;;AAIF,SAAK,aAAL;AACE,aAAOD,KAAK,CAACU,GAAN,CAAUC,CAAC,IAChBZ,IAAI,CAACY,CAAD,EAAIV,MAAJ,CADC,CAAP;;AAGF;AACE,aAAOD,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeQ,KAAf","sourcesContent":["const todo = (state = {}, action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      case 'TOGGLE_TODO':\n        if (state.id !== action.id) {\n          return state\n        }\n  \n        return Object.assign({}, state, {\n          completed: !state.completed\n        })\n  \n      default:\n        return state\n    }\n  }\n  \n  const todos = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [\n          ...state,\n          todo(undefined, action)\n        ]\n      case 'TOGGLE_TODO':\n        return state.map(t =>\n          todo(t, action)\n        )\n      default:\n        return state\n    }\n  }\n  \n  export default todos"]},"metadata":{},"sourceType":"module"}