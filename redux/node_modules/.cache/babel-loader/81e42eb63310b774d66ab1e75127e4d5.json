{"ast":null,"code":"import { INCREMENT, DECREMENT, RESET } from '../actions/index2';\nconst INITIAL_STATE = {\n  count: 0,\n  history: []\n};\n\nfunction handleChange(state, change) {\n  const {\n    count,\n    history\n  } = state;\n  return {\n    count: count + change,\n    history: [count + change, ...history]\n  };\n}\n\nexport default function counter(state = INITIAL_STATE, action) {\n  const {\n    count,\n    history\n  } = state;\n\n  switch (action.type) {\n    case INCREMENT:\n      return handleChange(state, 1);\n\n    case DECREMENT:\n      return handleChange(state, -1);\n\n    case RESET:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/maximilianobelizan/projects/git_pr/testing-react-libraries/redux/src/reducers/counter.js"],"names":["INCREMENT","DECREMENT","RESET","INITIAL_STATE","count","history","handleChange","state","change","counter","action","type"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA0C,mBAA1C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,CADa;AAEpBC,EAAAA,OAAO,EAAE;AAFW,CAAtB;;AAKA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,QAAM;AAACJ,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAmBE,KAAzB;AACA,SAAQ;AACNH,IAAAA,KAAK,EAAEA,KAAK,GAAGI,MADT;AAENH,IAAAA,OAAO,EAAE,CAACD,KAAK,GAAGI,MAAT,EAAiB,GAAGH,OAApB;AAFH,GAAR;AAID;;AAED,eAAe,SAASI,OAAT,CAAiBF,KAAK,GAAGJ,aAAzB,EAAwCO,MAAxC,EAAgD;AAC7D,QAAM;AAACN,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAmBE,KAAzB;;AACA,UAAOG,MAAM,CAACC,IAAd;AACE,SAAKX,SAAL;AACE,aAAOM,YAAY,CAACC,KAAD,EAAQ,CAAR,CAAnB;;AACF,SAAKN,SAAL;AACE,aAAOK,YAAY,CAACC,KAAD,EAAQ,CAAC,CAAT,CAAnB;;AACF,SAAKL,KAAL;AACE,aAAQC,aAAR;;AACF;AACE,aAAOI,KAAP;AARJ;AAUD","sourcesContent":["import {INCREMENT, DECREMENT, RESET} from '../actions/index2'\n\nconst INITIAL_STATE = {\n  count: 0,\n  history: [],\n}\n\nfunction handleChange(state, change) {\n  const {count, history} = state;\n  return ({\n    count: count + change,\n    history: [count + change, ...history]\n  })\n}\n\nexport default function counter(state = INITIAL_STATE, action) {\n  const {count, history} = state;\n  switch(action.type) {\n    case INCREMENT:\n      return handleChange(state, 1);\n    case DECREMENT:\n      return handleChange(state, -1);\n    case RESET:\n      return (INITIAL_STATE)\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}